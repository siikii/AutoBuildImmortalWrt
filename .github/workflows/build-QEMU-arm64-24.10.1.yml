name: build-QEMU-armsr-armv8-24.10.1

on:
  workflow_dispatch:
    

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: chmod +x ${{ github.workspace }}/armsr-armv8/build.sh
      
      - name: Building armsr-armv8 QEMU ImmortalWrt
        run: |          
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/files:/home/build/immortalwrt/files" \
              -v "${{ github.workspace }}/armsr-armv8/imm.config:/home/build/immortalwrt/.config" \
              -v "${{ github.workspace }}/armsr-armv8/build.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=generic \
              -e ROOTFS_PARTSIZE=2048 \
              -e ENABLE_PPPOE=no \
              -e PPPOE_ACCOUNT= \
              -e PPPOE_PASSWORD= \
              immortalwrt/imagebuilder:armsr-armv8-openwrt-24.10.1 /bin/bash /home/build/immortalwrt/build.sh

      - name: Generate Firmware SHA-256
        run: |
          cp ${{ github.workspace }}/bin/targets/armsr/armv8/*.qcow2 ${{ github.workspace }}

      - name: Upload ImmortWrt as release assets
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: QEMU
          name: ImmortWrt-QEMU-armsr-armv8-24.10.1
          body_path: ${{ github.workspace }}/armsr-armv8/info.md
          files: |
            ${{ github.workspace }}/*.qcow2
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
